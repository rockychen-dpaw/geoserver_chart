#create a headless service for geocluster admin
{{- if and $.Values.geoserver ($.Values.geoserver.clustering | default false) }}
{{- $adminServerIsWorker :=  true }}
{{- if hasKey $.Values.geoserver "adminServerIsWorker" }}
  {{- $adminServerIsWorker =  $.Values.geoserver.adminServerIsWorker }}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Release.Name }}-geocluster-workers-headless
spec:
  clusterIP: None
  clusterIPs:
    - None
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: default
      port: 42
      protocol: TCP
      targetPort: 42
  selector:
    workload.user.cattle.io/workloadselector: apps.statefulset-{{ $.Release.Namespace}}-{{ $.Release.Name }}-geocluster-workers
  sessionAffinity: None
  type: ClusterIP

{{- if not $adminServerIsWorker }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ $.Release.Name }}-geoclusteradmin-headless
spec:
  clusterIP: None
  clusterIPs:
    - None
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: default
      port: 42
      protocol: TCP
      targetPort: 42
  selector:
    workload.user.cattle.io/workloadselector: apps.statefulset-{{ $.Release.Namespace}}-{{ $.Release.Name }}-geoclusteradmin
  sessionAffinity: None
  type: ClusterIP

{{- end }}
{{- else }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ $.Release.Name }}-geoserver-headless
spec:
  clusterIP: None
  clusterIPs:
    - None
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: default
      port: 42
      protocol: TCP
      targetPort: 42
  selector:
    workload.user.cattle.io/workloadselector: apps.statefulset-{{ $.Release.Namespace}}-{{ $.Release.Name }}-geoserver
  sessionAffinity: None
  type: ClusterIP
{{- end }}
